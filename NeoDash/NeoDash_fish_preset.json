{
  "title": "Lineage tracking",
  "version": "2.2",
  "settings": {
    "pagenumber": 0,
    "editable": true,
    "fullscreenEnabled": false,
    "parameters": {
      "neodash_dataasset_uid_1": "PADS",
      "neodash_dataasset_uid_1_display": "PADS",
      "neodash_dataasset_uid_2": "MRP_SYS",
      "neodash_dataasset_uid_2_display": "MRP_SYS",
      "neodash_import_file": "lineage.tsv",
      "neodash_dataasset_uid_3": "PADS",
      "neodash_dataasset_uid_3_display": "PADS",
      "neodash_dataasset_uid_4": "MRP_SYS",
      "neodash_dataasset_uid_4_display": "MRP_SYS",
      "neodash_dataasset_uid_5": "SOG",
      "neodash_dataasset_uid_5_display": "SOG",
      "neodash_dataasset_uid_6": "SOG",
      "neodash_dataasset_uid_6_display": "SOG",
      "neodash_dataasset_uid_7": "NuSEDS",
      "neodash_dataasset_uid_7_display": "NuSEDS",
      "neodash_length": "1",
      "neodash_dataasset_uid_8": "SOG",
      "neodash_dataasset_uid_8_display": "SOG",
      "neodash_length_2": "1",
      "neodash_dataasset_p12_uid_1": "PADS/MRP_DE",
      "neodash_dataasset_p12_uid_1_display": "PADS/MRP_DE",
      "neodash_dataasset_p12_uid_2": "MRP_SYS",
      "neodash_dataasset_p12_uid_2_display": "MRP_SYS",
      "neodash_dataasset_p12_uid_7": "NuSEDS",
      "neodash_dataasset_p12_uid_7_display": "NuSEDS",
      "neodash_dataasset_p12_uid_3": "PADS",
      "neodash_dataasset_p12_uid_3_display": "PADS",
      "neodash_dataasset_p12_uid_4": "MRP_SYS",
      "neodash_dataasset_p12_uid_4_display": "MRP_SYS",
      "neodash_dataasset_p12_uid_5": "SOG",
      "neodash_dataasset_p12_uid_5_display": "SOG",
      "neodash_dataasset_p12_uid_6": "SOG",
      "neodash_dataasset_p12_uid_6_display": "SOG",
      "neodash_length1": "1",
      "neodash_dataasset_p12_uid_8": "MRP_SYS",
      "neodash_dataasset_p12_uid_8_display": "MRP_SYS",
      "neodash_length2": "2",
      "neodash_maximum_length": "1",
      "neodash_dataasset_p12_uid_9": "MRP_SYS",
      "neodash_dataasset_p12_uid_9_display": "MRP_SYS",
      "neodash_exact_length_2": "2",
      "neodash_exact_length_1": "1",
      "neodash_dataasset_p12_uid_10": "FOS",
      "neodash_dataasset_p12_uid_10_display": "FOS"
    }
  },
  "pages": [
    {
      "title": "Main Page",
      "reports": [
        {
          "title": "Hi there ðŸ‘‹ ",
          "query": "**Welcome to Lineage tracking!** \n\nBefore you use this dashboard, please click on the play icon below this report to load the data. The `-1` can be ignored.\n\nYou can proceed to other tabs/pages to checkout further interaction and visualization.",
          "width": 3,
          "height": 1,
          "x": 0,
          "y": 0,
          "type": "text",
          "selection": {},
          "settings": {}
        },
        {
          "title": "Import data",
          "query": "CALL apoc.cypher.runMany(\"\n//Load fishy lineage data\nLOAD CSV WITH HEADERS FROM 'file:///lineage.tsv' AS row FIELDTERMINATOR '\\t'\nWITH row\n    MERGE (n:DataAsset {p12_uid: TRIM(row.Data_Asset_Acronym)})\n        SET\n            n.p02_name = TRIM(row.Data_Asset_Name),\n            n.p10_gid = TRIM(row.Graph_ID),\n            n.p11_iid = TRIM(row.Inventory_ID),\n            n.p13_type = TRIM(row.Data_Asset_Type),\n            n.p01_acronym = TRIM(row.Data_Asset_Acronym),\n            n.p03_desc = TRIM(row.Data_Asset_Description),\n            n.p04_format = TRIM(row.Data_Asset_Format),\n            n.p05_decision = TRIM(row.Decision),\n            n.p07_inbound = TRIM(row.Inbound_Data_Linkage),\n            n.p08_outbound = TRIM(row.Outbound_Data_Linkage),\n            n.p09_twoway = TRIM(row.Two_Way_Linkage),\n            n.p06_topic = TRIM(row.Data_Asset_topic);\n            \nLOAD CSV WITH HEADERS FROM 'file:///lineage.tsv' AS row FIELDTERMINATOR '\\t'\nWITH row\n    MERGE (n:DataAsset {p12_uid: TRIM(row.Data_Asset_Acronym)})\nWITH row, n\n    UNWIND SPLIT(row.Inbound_Data_Linkage_List, '|') AS links \nWITH row, n, SPLIT(links, ':') AS link\n    MERGE (m:DataAsset {p12_uid: TRIM(link[0])})\n    MERGE (n)<-[r:IN]-(m)\n        SET \n            r.type = TRIM(link[1])\n\nUNION \n\nLOAD CSV WITH HEADERS FROM 'file:///lineage.tsv' AS row FIELDTERMINATOR '\\t'\nWITH row\n    MERGE (n:DataAsset {p12_uid: TRIM(row.Data_Asset_Acronym)})\nWITH row, n\n    UNWIND SPLIT(row.Outbound_Data_Linkage_List, '|') AS links \nWITH row, n, SPLIT(links, ':') AS link\n    MERGE (m:DataAsset {p12_uid: TRIM(link[0])})\n    MERGE (n)-[r:OUT]->(m)\n        SET \n            r.type = TRIM(link[1])\n\nUNION \n\nLOAD CSV WITH HEADERS FROM 'file:///lineage.tsv' AS row FIELDTERMINATOR '\\t'\nWITH row\n    MERGE (n:DataAsset {p12_uid: TRIM(row.Data_Asset_Acronym)})\nWITH row, n\n    UNWIND SPLIT(row.Two_Way_Linkage_List, '|') AS links \nWITH row, n, SPLIT(links, ':') AS link\n    MERGE (m:DataAsset {p12_uid: TRIM(link[0])})\n    MERGE (n)<-[r:TWO_WAYS]->(m)\n        SET \n            r.type = TRIM(link[1]);\n\", {statistics: false});\n",
          "width": 3,
          "height": 2,
          "x": 0,
          "y": 1,
          "type": "value",
          "selection": {},
          "settings": {
            "nodePositions": {},
            "autorun": false,
            "refreshButtonEnabled": false,
            "description": "Click on the play button to load data into neo4j.",
            "type": "Node Property"
          }
        },
        {
          "title": "Display of entire graph database",
          "query": "MATCH (n)\nOPTIONAL MATCH (n)-[r]-()\nRETURN n, r",
          "width": 7,
          "height": 3,
          "x": 3,
          "y": 0,
          "type": "graph",
          "selection": {
            "DataAsset": "p01_acronym"
          },
          "settings": {
            "nodePositions": {},
            "defaultNodeSize": 5,
            "relationshipParticles": false,
            "refreshButtonEnabled": true,
            "fullscreenEnabled": true
          }
        }
      ]
    },
    {
      "title": "Shortest path between two ",
      "reports": [
        {
          "title": "Starting node",
          "query": "MATCH (n:`DataAsset`) \nWHERE toLower(toString(n.`p12_uid`)) CONTAINS toLower($input) \nRETURN DISTINCT n.`p12_uid` as value,  n.`p12_uid` as display ORDER BY size(toString(value)) ASC LIMIT 5",
          "width": 5,
          "height": 1,
          "x": 0,
          "y": 0,
          "type": "select",
          "selection": {},
          "settings": {
            "nodePositions": {},
            "type": "Node Property",
            "entityType": "DataAsset",
            "id": "1",
            "propertyType": "p12_uid",
            "propertyTypeDisplay": "p12_uid",
            "parameterName": "neodash_dataasset_p12_uid_1"
          }
        },
        {
          "title": "Shortest path between two selected nodes",
          "query": "// Single shortest path  between two selected nodes\nMATCH (n:DataAsset {p12_uid: $neodash_dataasset_p12_uid_2})\nWITH n\n    MATCH (m:DataAsset {p12_uid: $neodash_dataasset_p12_uid_1})\nWITH n, m    \n    MATCH p=SHORTESTPATH((m)-[*]->(n))\nRETURN p\n",
          "width": 10,
          "height": 3,
          "x": 0,
          "y": 1,
          "type": "graph",
          "selection": {
            "DataAsset": "p01_acronym"
          },
          "settings": {
            "nodePositions": {},
            "defaultNodeSize": 5
          }
        },
        {
          "title": "Ending node",
          "query": "MATCH (n:`DataAsset`) \nWHERE toLower(toString(n.`p12_uid`)) CONTAINS toLower($input) \nRETURN DISTINCT n.`p12_uid` as value,  n.`p12_uid` as display ORDER BY size(toString(value)) ASC LIMIT 5",
          "width": 5,
          "height": 1,
          "x": 5,
          "y": 0,
          "type": "select",
          "selection": {},
          "settings": {
            "nodePositions": {},
            "type": "Node Property",
            "entityType": "DataAsset",
            "id": "2",
            "propertyType": "p12_uid",
            "propertyTypeDisplay": "p12_uid",
            "parameterName": "neodash_dataasset_p12_uid_2"
          }
        }
      ]
    },
    {
      "title": "All paths between two",
      "reports": [
        {
          "title": "Starting nodes",
          "query": "MATCH (n:`DataAsset`) \nWHERE toLower(toString(n.`p12_uid`)) CONTAINS toLower($input) \nRETURN DISTINCT n.`p12_uid` as value,  n.`p12_uid` as display ORDER BY size(toString(value)) ASC LIMIT 5",
          "width": 5,
          "height": 1,
          "x": 0,
          "y": 0,
          "type": "select",
          "selection": {},
          "settings": {
            "nodePositions": {},
            "type": "Node Property",
            "entityType": "DataAsset",
            "propertyType": "p12_uid",
            "propertyTypeDisplay": "p12_uid",
            "parameterName": "neodash_dataasset_p12_uid_3",
            "id": "3",
            "description": "Select starting node of the paths you want"
          }
        },
        {
          "title": "Ending nodes",
          "query": "MATCH (n:`DataAsset`) \nWHERE toLower(toString(n.`p12_uid`)) CONTAINS toLower($input) \nRETURN DISTINCT n.`p12_uid` as value,  n.`p12_uid` as display ORDER BY size(toString(value)) ASC LIMIT 5",
          "width": 5,
          "height": 1,
          "x": 5,
          "y": 0,
          "type": "select",
          "selection": {},
          "settings": {
            "nodePositions": {},
            "type": "Node Property",
            "entityType": "DataAsset",
            "id": "4",
            "description": "Select ending node of the paths you want",
            "propertyType": "p12_uid",
            "propertyTypeDisplay": "p12_uid",
            "parameterName": "neodash_dataasset_p12_uid_4"
          }
        },
        {
          "title": "All paths between two nodes",
          "query": "// All paths between two selected nodes\nMATCH (n:DataAsset {p12_uid: $neodash_dataasset_p12_uid_4})\nWITH n\n    MATCH (m:DataAsset {p12_uid: $neodash_dataasset_p12_uid_3})\nWITH n, m    \n    MATCH p=((m)-[*]->(n))\nRETURN p\n\n\n",
          "width": 10,
          "height": 3,
          "x": 0,
          "y": 1,
          "type": "graph",
          "selection": {
            "DataAsset": "p01_acronym"
          },
          "settings": {
            "nodePositions": {},
            "defaultNodeSize": 5
          }
        }
      ]
    },
    {
      "title": "All shortest paths",
      "reports": [
        {
          "title": "Starting node",
          "query": "MATCH (n:`DataAsset`) \nWHERE toLower(toString(n.`p12_uid`)) CONTAINS toLower($input) \nRETURN DISTINCT n.`p12_uid` as value,  n.`p12_uid` as display ORDER BY size(toString(value)) ASC LIMIT 5",
          "width": 3,
          "height": 3,
          "x": 0,
          "y": 0,
          "type": "select",
          "selection": {},
          "settings": {
            "nodePositions": {},
            "type": "Node Property",
            "entityType": "DataAsset",
            "propertyType": "p12_uid",
            "propertyTypeDisplay": "p12_uid",
            "parameterName": "neodash_dataasset_p12_uid_5",
            "id": "5",
            "description": "Select starting node. The graph will yield all connected nodes and the shortest path together"
          }
        },
        {
          "title": "All shortest path to connected nodes from a selected node",
          "query": "MATCH (n:DataAsset {p12_uid: $neodash_dataasset_p12_uid_5})\nWITH n\n    MATCH (m:DataAsset)\n        WHERE m <> n\nWITH n, m    \n    MATCH p=SHORTESTPATH((m)-[*]->(n))\nRETURN p\n\n\n",
          "width": 7,
          "height": 3,
          "x": 3,
          "y": 0,
          "type": "graph",
          "selection": {
            "DataAsset": "p01_acronym"
          },
          "settings": {
            "nodePositions": {}
          }
        }
      ]
    },
    {
      "title": " All distinct, \"directed-\"connected nodes",
      "reports": [
        {
          "title": "Starting node",
          "query": "MATCH (n:`DataAsset`) \nWHERE toLower(toString(n.`p12_uid`)) CONTAINS toLower($input) \nRETURN DISTINCT n.`p12_uid` as value,  n.`p12_uid` as display ORDER BY size(toString(value)) ASC LIMIT 5",
          "width": 5,
          "height": 1,
          "x": 0,
          "y": 0,
          "type": "select",
          "selection": {},
          "settings": {
            "nodePositions": {},
            "type": "Node Property",
            "description": "Select starting node. The graph will yield all connected nodes",
            "entityType": "DataAsset",
            "propertyType": "p12_uid",
            "propertyTypeDisplay": "p12_uid",
            "parameterName": "neodash_dataasset_p12_uid_6",
            "id": "6"
          }
        },
        {
          "title": "All distinct nodes, \"directed-\"connected to starting node.",
          "query": "// All distinct nodes, \"directed-\"connected to a selected node.\nMATCH (n:DataAsset {p12_uid:$neodash_dataasset_p12_uid_6})\nWITH n\n    MATCH (m:DataAsset)\n        WHERE m <> n\nWITH n, m    \n    MATCH p=SHORTESTPATH((m)-[*]->(n))\nRETURN\n\tCOUNT(DISTINCT(NODES(p)[0])) AS total_connected,\n\tCOLLECT(DISTINCT(NODES(p)[0].p01_acronym)) AS nodes;\n\n\n",
          "width": 10,
          "height": 1,
          "x": 0,
          "y": 1,
          "type": "table",
          "selection": {},
          "settings": {
            "nodePositions": {},
            "columnWidths": "[1,5]"
          }
        }
      ]
    },
    {
      "title": "Reachable nodes in exact length",
      "reports": [
        {
          "title": "Starting nodes",
          "query": "MATCH (n:`DataAsset`) \nWHERE toLower(toString(n.`p12_uid`)) CONTAINS toLower($input) \nRETURN DISTINCT n.`p12_uid` as value,  n.`p12_uid` as display ORDER BY size(toString(value)) ASC LIMIT 5",
          "width": 3,
          "height": 2,
          "x": 0,
          "y": 0,
          "type": "select",
          "selection": {},
          "settings": {
            "nodePositions": {},
            "type": "Node Property",
            "entityType": "DataAsset",
            "id": "7",
            "propertyType": "p12_uid",
            "propertyTypeDisplay": "p12_uid",
            "parameterName": "neodash_dataasset_p12_uid_7"
          }
        },
        {
          "title": "All reachable nodes, with shortest path specified length",
          "query": "// All shortest paths, with length exact, to connected nodes from selected one\nMATCH (n:DataAsset {p12_uid: $neodash_dataasset_p12_uid_7})\nWITH n\n    MATCH (m:DataAsset)\n        WHERE m <> n\nWITH n, m    \n    MATCH p=SHORTESTPATH((m)-[*]->(n))\n        WHERE LENGTH(p) = toInteger($neodash_exact_length_1)\nRETURN p\n\n",
          "width": 7,
          "height": 4,
          "x": 3,
          "y": 0,
          "type": "graph",
          "selection": {
            "DataAsset": "p01_acronym"
          },
          "settings": {
            "nodePositions": {},
            "defaultNodeSize": 5
          }
        },
        {
          "title": "Exact Length",
          "query": "RETURN true",
          "width": 3,
          "height": 2,
          "x": 0,
          "y": 4,
          "type": "select",
          "selection": {},
          "settings": {
            "nodePositions": {},
            "type": "Free Text",
            "suggestionLimit": 10,
            "defaultValue": "3",
            "description": "Enter length (in number of nodes) of each path to ending node. Default to 3",
            "entityType": "Exact length 1",
            "parameterName": "neodash_exact_length_1"
          }
        }
      ]
    },
    {
      "title": "Reachable nodes within maximum length",
      "reports": [
        {
          "title": "Starting node",
          "query": "MATCH (n:`DataAsset`) \nWHERE toLower(toString(n.`p12_uid`)) CONTAINS toLower($input) \nRETURN DISTINCT n.`p12_uid` as value,  n.`p12_uid` as display ORDER BY size(toString(value)) ASC LIMIT 5",
          "width": 3,
          "height": 2,
          "x": 0,
          "y": 0,
          "type": "select",
          "selection": {},
          "settings": {
            "nodePositions": {},
            "type": "Node Property",
            "entityType": "DataAsset",
            "propertyType": "p12_uid",
            "propertyTypeDisplay": "p12_uid",
            "parameterName": "neodash_dataasset_p12_uid_8",
            "id": "8"
          }
        },
        {
          "title": "Maximum length",
          "query": "RETURN true",
          "width": 3,
          "height": 2,
          "x": 0,
          "y": 2,
          "type": "select",
          "selection": {},
          "settings": {
            "nodePositions": {},
            "type": "Free Text",
            "entityType": "maximum_length",
            "parameterName": "neodash_maximum_length"
          }
        },
        {
          "title": "Reachable nodes within Maximum length",
          "query": "// All shortest paths, at maximum length specified, to connected nodes from selected one\nMATCH (n:DataAsset {p12_uid: $neodash_dataasset_p12_uid_8})\nWITH n\n    MATCH (m:DataAsset)\n        WHERE m <> n\nWITH n, m    \n    MATCH p=SHORTESTPATH((m)-[*]->(n))\n        WHERE LENGTH(p) <= toInteger($neodash_maximum_length)\nRETURN p\n\n\n\n\n",
          "width": 6,
          "height": 4,
          "x": 3,
          "y": 0,
          "type": "graph",
          "selection": {
            "DataAsset": "p01_acronym"
          },
          "settings": {
            "nodePositions": {}
          }
        }
      ]
    },
    {
      "title": "Reachable nodes within length",
      "reports": [
        {
          "title": "Select node",
          "query": "MATCH (n:`DataAsset`) \nWHERE toLower(toString(n.`p12_uid`)) CONTAINS toLower($input) \nRETURN DISTINCT n.`p12_uid` as value,  n.`p12_uid` as display ORDER BY size(toString(value)) ASC LIMIT 5",
          "width": 3,
          "height": 2,
          "x": 0,
          "y": 0,
          "type": "select",
          "selection": {},
          "settings": {
            "nodePositions": {},
            "type": "Node Property",
            "entityType": "DataAsset",
            "propertyType": "p12_uid",
            "propertyTypeDisplay": "p12_uid",
            "parameterName": "neodash_dataasset_p12_uid_9",
            "id": "9"
          }
        },
        {
          "title": "Reachable nodes within length",
          "query": "// All nodes can be reached from a selected one, with in three steps\nMATCH (n:DataAsset {p12_uid: $neodash_dataasset_p12_uid_9 })\nWITH n\n    MATCH (m:DataAsset)\n        WHERE m <> n\nWITH n, m    \n    MATCH p=SHORTESTPATH((m)-[*]->(n))\n        WHERE LENGTH(p) = toInteger($neodash_exact_length_2 )\nRETURN m\n\n\n",
          "width": 7,
          "height": 4,
          "x": 3,
          "y": 0,
          "type": "graph",
          "selection": {
            "DataAsset": "p01_acronym"
          },
          "settings": {
            "nodePositions": {},
            "defaultNodeSize": 20,
            "nodeLabelFontSize": 10
          }
        },
        {
          "title": "Exact Length",
          "query": "RETURN true",
          "width": 3,
          "height": 2,
          "x": 0,
          "y": 4,
          "type": "select",
          "selection": {},
          "settings": {
            "nodePositions": {},
            "type": "Free Text",
            "entityType": "Exact length 2",
            "parameterName": "neodash_exact_length_2"
          }
        }
      ]
    },
    {
      "title": "Node impact",
      "reports": [
        {
          "title": "Impacted node",
          "query": "MATCH (n:`DataAsset`) \nWHERE toLower(toString(n.`p12_uid`)) CONTAINS toLower($input) \nRETURN DISTINCT n.`p12_uid` as value,  n.`p12_uid` as display ORDER BY size(toString(value)) ASC LIMIT 5",
          "width": 3,
          "height": 2,
          "x": 0,
          "y": 0,
          "type": "select",
          "selection": {},
          "settings": {
            "nodePositions": {},
            "type": "Node Property",
            "entityType": "DataAsset",
            "propertyType": "p12_uid",
            "propertyTypeDisplay": "p12_uid",
            "parameterName": "neodash_dataasset_p12_uid_10",
            "id": "10"
          }
        },
        {
          "title": "Inbound affected nodes",
          "query": "// Direct neighboring inbound\nMATCH (n:DataAsset {p01_acronym: $neodash_dataasset_p12_uid_10})\nCALL apoc.path.spanningTree(n, {\n        relationshipFilter: \"<\",\n    maxLevel: 1\n})\nYIELD path\nRETURN path\n\n\n",
          "width": 3,
          "height": 2,
          "x": 3,
          "y": 0,
          "type": "graph",
          "selection": {
            "DataAsset": "p01_acronym"
          },
          "settings": {
            "nodePositions": {}
          }
        },
        {
          "title": "Outbound affected nodes",
          "query": "// Direct neighboring outbound\nMATCH (n:DataAsset {p01_acronym: $neodash_dataasset_p12_uid_10})\nCALL apoc.path.spanningTree(n, {\n        relationshipFilter: \">\",\n    maxLevel: 1\n})\nYIELD path\nRETURN path\n\n\n",
          "width": 3,
          "height": 2,
          "x": 0,
          "y": 2,
          "type": "graph",
          "selection": {
            "DataAsset": "p01_acronym"
          },
          "settings": {
            "nodePositions": {}
          }
        },
        {
          "title": "Two Ways affected nodes",
          "query": "// Direct neighboring outbound\nMATCH (n:DataAsset {p01_acronym: $neodash_dataasset_p12_uid_10})\nCALL apoc.path.spanningTree(n, {\n        relationshipFilter: \"<TWO_WAYS>\",\n    maxLevel: 1\n})\nYIELD path\nRETURN path\n\n\n",
          "width": 3,
          "height": 2,
          "x": 3,
          "y": 2,
          "type": "graph",
          "selection": {
            "DataAsset": "p01_acronym"
          },
          "settings": {
            "nodePositions": {}
          }
        }
      ]
    }
  ],
  "parameters": {},
  "extensions": {}
}
